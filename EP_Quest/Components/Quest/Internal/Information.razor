@using EP_Quest.Components.Quest.Internal

<div class="@_side">
    <div class="instruction-side" style="visibility: @_instructionsVisibility">
        <Instruction @ref="_instructionComponent" ToDashboard="FromInstructionsToDashboard"></Instruction>
    </div>
    <div class="dashboard-side" style="visibility: @_dashboardVisibility">
        <Dashboard @ref="_dashboardComponent" ToInstructions="ToInstructions" ToSelectedStep="ToSelectedStep"></Dashboard>
    </div>
    <div class="quest-side" style="visibility: @_questVisibility">
        <Quest FromQuestToDashboard="FromQuestToDashboard"></Quest>
    </div>
</div>

@code {
    private Instruction _instructionComponent;
    private Dashboard _dashboardComponent;
    private string _side = "main-side";
    private string _instructionsVisibility = "visible";
    private string _dashboardVisibility = "visible";
    private string _questVisibility = "hidden";

    protected override async Task OnInitializedAsync()
    {
    }
    private async Task ToInstructions()
    {
        await _instructionComponent.Init();
        _instructionsVisibility = "visible";
        _dashboardVisibility = "visible";
        _questVisibility = "hidden";
        _side = "main-side";
    }
    private void FromInstructionsToDashboard()
    {
        _dashboardComponent.Init();
        _instructionsVisibility = "visible";
        _dashboardVisibility = "visible";
        _questVisibility = "hidden";
        _side = "back-side";
    }
    private void FromQuestToDashboard()
    {
        _dashboardComponent.Init();
        _instructionsVisibility = "hidden";
        _dashboardVisibility = "visible";
        _questVisibility = "visible";
        _side = "back-side";
    }
    private void ToSelectedStep()
    {
        _instructionsVisibility = "hidden";
        _dashboardVisibility = "visible";
        _questVisibility = "visible";
        _side = "main-side";
    }
}
